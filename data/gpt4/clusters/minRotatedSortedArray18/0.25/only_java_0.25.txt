

****** Cluster 0 ******
public static Integer func_3884c5af8ce94016906ba082a31a6e30(Integer start, Integer[] nums, Integer end){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return mid;
}
public static Integer func_4dd70d23eb9f4285ad93ee0397f4a5bd(Integer start, Integer[] nums, Integer end){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return start;
}
public static Integer func_a1efbbe35edf49c4939a745b0f459687(Integer start, Integer[] nums, Integer end){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return end;
}
public static Integer func_3017d350a7df432c99cee6694553825a(Integer left, Integer[] nums, Integer right){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return mid;
}
public static Integer func_f1be08dabc9c4d2aa8535eff4e2c4136(Integer left, Integer[] nums, Integer right){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return left;
}
public static Integer func_c37cee8293034887aa71486ecb11db06(Integer left, Integer[] nums, Integer right){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return right;
}
public static Integer func_11743944dd0840c1ba5cbaf02357d486(Integer left, Integer[] nums, Integer right){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return left;
}
public static Integer func_11f699dabd1140f3ab448f759f71ce89(Integer left, Integer[] nums, Integer right){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return mid;
}
public static Integer func_fd8453df40db4bb0bbb5d5f41a34a578(Integer left, Integer[] nums, Integer right){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return right;
}
public static Integer func_91381822755b44a88bca5fdb212849ce(Integer left, Integer[] nums, Integer right){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return right;
}
public static Integer func_1f8046ef505b4c31b3b1f561a389ff2a(Integer left, Integer[] nums, Integer right){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return left;
}
public static Integer func_7fc6d6bd7c1442b7ad51c52efff78829(Integer left, Integer[] nums, Integer right){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return mid;
}
public static Integer func_d847653fddea441c9ce2d1e58f44aa62(Integer left, Integer[] nums, Integer right){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return right;
}
public static Integer func_05e9d93d272c4ac49fd94cb5b49f7a2d(Integer left, Integer[] nums, Integer right){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return mid;
}
public static Integer func_a5e58dc29f3e4bfe927bd3883e1fbcfd(Integer left, Integer[] nums, Integer right){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return left;
}
public static Integer func_75310e07a292491e983962e3f63a5127(Integer start, Integer[] nums, Integer end){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return end;
}
public static Integer func_5c2a4aeedef5450295136adcd8b1e222(Integer start, Integer[] nums, Integer end){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return start;
}
public static Integer func_c325597753b24c50b68b1f245f16b7b0(Integer start, Integer[] nums, Integer end){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return mid;
}
public static Integer func_31cb2e1403324889a1be52b6fa968c30(Integer left, Integer[] nums, Integer right){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return mid;
}
public static Integer func_4ced19e6695b4101b14f5030539002db(Integer left, Integer[] nums, Integer right){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return right;
}
public static Integer func_45ecabdee24f4c9184d7a1b129d7f69a(Integer left, Integer[] nums, Integer right){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return left;
}
public static Integer func_269b92aa45e7432c821ebb29eee54283(Integer left, Integer[] nums, Integer right){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return left;
}
public static Integer func_6765a6bfce6d4598b73b3c875b7bc61d(Integer left, Integer[] nums, Integer right){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return right;
}
public static Integer func_99fd213eb59f4b1a97fc781aa2d29a3d(Integer left, Integer[] nums, Integer right){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return mid;
}
public static Integer func_be8d33ac96a74dfea94caece1bb3603c(Integer left, Integer[] nums, Integer right){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return mid;
}
public static Integer func_97620ef82cd148478d07f1e7b6094553(Integer left, Integer[] nums, Integer right){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return left;
}
public static Integer func_c084fff6c7b84540bba5f3c96788d5f9(Integer left, Integer[] nums, Integer right){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return right;
}
public static Integer func_88364cee3f54474abfb4ad202ed3ddcb(Integer left, Integer[] nums, Integer right){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return right;
}
public static Integer func_42e80f5818e94a66900f7f192f1240d5(Integer left, Integer[] nums, Integer right){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return left;
}
public static Integer func_8c631f010e564380b9b7eb1ca83a810a(Integer left, Integer[] nums, Integer right){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return mid;
}
public static Integer func_370cf9d24e464986bda7e8d00b42d130(Integer left, Integer[] nums, Integer right){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return mid;
}
public static Integer func_97dbd55e68674dda97183b1521a346e1(Integer left, Integer[] nums, Integer right){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return right;
}
public static Integer func_d12e23e703604a77ba9333fcd29102db(Integer left, Integer[] nums, Integer right){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return left;
}
public static Integer func_e8fb6a7f56944fd481d15d03c2bc3775(Integer left, Integer[] nums, Integer right){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return mid;
}
public static Integer func_e080f91c2d9c423394d843050dcd17f8(Integer left, Integer[] nums, Integer right){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return right;
}
public static Integer func_37ff34352cc34242926f0cea88721e71(Integer left, Integer[] nums, Integer right){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return left;
}
public static Integer func_ef7081c7c80b4b7588df3642e7e7454b(Integer left, Integer[] nums, Integer right){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return left;
}
public static Integer func_d4dd1da9c8f94cd2a3cca066063f5981(Integer left, Integer[] nums, Integer right){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return right;
}
public static Integer func_64d65bedb3ad489b990f228c9f9a7d7e(Integer left, Integer[] nums, Integer right){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return mid;
}
public static Integer func_ab5033a846a34dbabe7695c067a5df40(Integer left, Integer[] nums, Integer right){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return mid;
}
public static Integer func_14e84a436db742af981fb6a3a8c97107(Integer left, Integer[] nums, Integer right){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return left;
}
public static Integer func_373486d15a27401d98767044fcf49d9b(Integer left, Integer[] nums, Integer right){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return right;
}
public static Integer func_e010de8eed3b41a4a529fd52aad60422(Integer start, Integer[] nums, Integer end){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return end;
}
public static Integer func_da3cffdacc9f438faefa6345410f04dc(Integer start, Integer[] nums, Integer end){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return start;
}
public static Integer func_1d4b61aec3e84eedab9a2a98cac86e75(Integer start, Integer[] nums, Integer end){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return mid;
}
public static Integer func_5bde8028dd484474a7073dacc35544a2(Integer left, Integer[] nums, Integer right){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return left;
}
public static Integer func_97a0baaf1e3c447dbee1b03a9164b6df(Integer left, Integer[] nums, Integer right){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return mid;
}
public static Integer func_18bf87509cf84acab023a0d7a8e7dd00(Integer left, Integer[] nums, Integer right){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return right;
}
public static Integer func_2212cb37036c4d3fa7fabcec2afb6046(Integer left, Integer[] nums, Integer right){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return left;
}
public static Integer func_8b47ed3caac04b03bcc4cf600ee75c2d(Integer left, Integer[] nums, Integer right){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return right;
}
public static Integer func_3aa4c53db79d4b1183ee2c50ef400eab(Integer left, Integer[] nums, Integer right){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return midpoint;
}
public static Integer func_d17daf5ed0db492b9532818c8631d25e(Integer left, Integer[] nums, Integer right){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return left;
}
public static Integer func_7d1e1ce04f0e4ae1991edef725317000(Integer left, Integer[] nums, Integer right){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return right;
}
public static Integer func_eea8412ff45a45548a51b1f33f163b1d(Integer left, Integer[] nums, Integer right){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return mid;
}


****** Cluster 1 ******
public static Integer func_5fe03b50b0c84cefb07c4c6516faf53b(Integer start, Integer end, Integer[] nums){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return mid;
}
public static Integer func_5bafd21d50a3411f8351b912e8bfa4cd(Integer start, Integer end, Integer[] nums){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return start;
}
public static Integer func_1e871f06d2c24aafb6de2d00c1fe59ec(Integer start, Integer end, Integer[] nums){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return end;
}
public static Integer func_ce4532e10403496797131f3fe66d346e(Integer left, Integer right, Integer[] nums){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return mid;
}
public static Integer func_ded1183b94114db6a6fdc83681680f7a(Integer left, Integer right, Integer[] nums){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return left;
}
public static Integer func_049517ed356c4da184f93d64b93f9886(Integer left, Integer right, Integer[] nums){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return right;
}
public static Integer func_fb44509ae9b54706b7340dc8e5784265(Integer left, Integer right, Integer[] nums){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return left;
}
public static Integer func_5c783b2bf8a94186bdcb01b093f5defd(Integer left, Integer right, Integer[] nums){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return mid;
}
public static Integer func_daaf9e1952224607b59d6ab7b19c7404(Integer left, Integer right, Integer[] nums){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return right;
}
public static Integer func_c89192fe88c841a1af0f3cd756ce2ccb(Integer left, Integer right, Integer[] nums){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return right;
}
public static Integer func_1c393f95ed9f470b9502b65b7f05e7d5(Integer left, Integer right, Integer[] nums){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return left;
}
public static Integer func_5251450e90564ec1bff2f1667ca9503e(Integer left, Integer right, Integer[] nums){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return mid;
}
public static Integer func_935c239dc7614f48b97b9873acffc036(Integer left, Integer right, Integer[] nums){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return right;
}
public static Integer func_05cd4f59018e4a6bbbd23cb6e9f2c3a1(Integer left, Integer right, Integer[] nums){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return mid;
}
public static Integer func_6af8a140d28044388cc2036e5daa15e8(Integer left, Integer right, Integer[] nums){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return left;
}
public static Integer func_3d1dc9e6b5de4de391ce9054d4c38969(Integer start, Integer end, Integer[] nums){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return end;
}
public static Integer func_f7522e8cf4ca4bb29e48c55cf7826f8e(Integer start, Integer end, Integer[] nums){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return start;
}
public static Integer func_29ecc23fc216431caccd20f4547a2776(Integer start, Integer end, Integer[] nums){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return mid;
}
public static Integer func_77446ca17c484f3397081cdb3b360de8(Integer left, Integer right, Integer[] nums){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return mid;
}
public static Integer func_0406b7c07b5c46bc88930cefeb1db9ae(Integer left, Integer right, Integer[] nums){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return right;
}
public static Integer func_b22bc7ca58d644128a738a2f73d4de41(Integer left, Integer right, Integer[] nums){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return left;
}
public static Integer func_5a52076f56b3455fa8316e4f071d935f(Integer left, Integer right, Integer[] nums){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return left;
}
public static Integer func_f3008742d3ee43d68139a60bd2a0fd65(Integer left, Integer right, Integer[] nums){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return right;
}
public static Integer func_0a9dafbaf2ce4d9eabc8dce2b01e0957(Integer left, Integer right, Integer[] nums){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return mid;
}
public static Integer func_425082ae20814e26b8f11f90a94dd04a(Integer left, Integer right, Integer[] nums){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return mid;
}
public static Integer func_3c169c48901d4c86bc63ad5bd0f19d30(Integer left, Integer right, Integer[] nums){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return left;
}
public static Integer func_3c8fef3f33c24bb0b09ae3c9143a52af(Integer left, Integer right, Integer[] nums){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return right;
}
public static Integer func_4feb8758f30f4a979899fe84a74044cf(Integer left, Integer right, Integer[] nums){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return right;
}
public static Integer func_a49ab8fdec364f4887c4dbfd8d9e519f(Integer left, Integer right, Integer[] nums){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return left;
}
public static Integer func_fd94c6c78c074b21bb131c3f5d7cab6b(Integer left, Integer right, Integer[] nums){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return mid;
}
public static Integer func_75c9d00a45154b90accef8c2b4c7fbd6(Integer left, Integer right, Integer[] nums){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return mid;
}
public static Integer func_b12c603d37e94f07b4a2fce4d7fa72f6(Integer left, Integer right, Integer[] nums){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return right;
}
public static Integer func_a23d481af8e34eb5a5a67da31e08a870(Integer left, Integer right, Integer[] nums){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return left;
}
public static Integer func_ce2158b4896c4776b5bd4dd0a74b4b99(Integer left, Integer right, Integer[] nums){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return mid;
}
public static Integer func_5276a95f05d44a739fad0d3583e61c0e(Integer left, Integer right, Integer[] nums){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return right;
}
public static Integer func_ba099eb151bc4c12b6a472abd7c334db(Integer left, Integer right, Integer[] nums){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return left;
}
public static Integer func_b3d253d1fdd044908feadf33fd9bd12e(Integer left, Integer right, Integer[] nums){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return left;
}
public static Integer func_56cfe67cb2c04177a0019f0380182d0e(Integer left, Integer right, Integer[] nums){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return right;
}
public static Integer func_abc4d43d6a714841b4c634eb3fd285a8(Integer left, Integer right, Integer[] nums){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return mid;
}
public static Integer func_162c41d3202d43178e6931881269b72d(Integer left, Integer right, Integer[] nums){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return mid;
}
public static Integer func_ad87df56bb0241a78d7a41e862e5d184(Integer left, Integer right, Integer[] nums){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return left;
}
public static Integer func_9ad16449b6d24c67a17d8bd004aacfe0(Integer left, Integer right, Integer[] nums){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return right;
}
public static Integer func_77a95c78d7b2440ebf12e7f1387ae43b(Integer start, Integer end, Integer[] nums){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return end;
}
public static Integer func_c9c885f6a0da4b4fa1ea278c3fccb716(Integer start, Integer end, Integer[] nums){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return start;
}
public static Integer func_aa4b30348223420a9947c6dab2f9cdbd(Integer start, Integer end, Integer[] nums){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return mid;
}
public static Integer func_eb6fe34dbe7f431e8217cc6f38b92642(Integer left, Integer right, Integer[] nums){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return left;
}
public static Integer func_dc3d6fb2af044f9396527b599395c373(Integer left, Integer right, Integer[] nums){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return mid;
}
public static Integer func_9056f2e5491e4d1c882b68ff27a31ede(Integer left, Integer right, Integer[] nums){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return right;
}
public static Integer func_8b8eb338a8404cfb814af418af705671(Integer left, Integer right, Integer[] nums){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return left;
}
public static Integer func_19cffddb358c4305b13e67f5f730e500(Integer left, Integer right, Integer[] nums){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return right;
}
public static Integer func_02c695d95e084b09bd5104db33aecbd4(Integer left, Integer right, Integer[] nums){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return midpoint;
}
public static Integer func_c352c79e3372465187de781a8726d4c7(Integer left, Integer right, Integer[] nums){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return left;
}
public static Integer func_0138db6215864b008c178bd9828ae319(Integer left, Integer right, Integer[] nums){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return right;
}
public static Integer func_647d2cb650914da9a1da84f8a631ba68(Integer left, Integer right, Integer[] nums){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return mid;
}


****** Cluster 2 ******
public static Integer func_da34623447f14088a69e6aac83d38f4b(Integer end, Integer start, Integer[] nums){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return mid;
}
public static Integer func_f5810e9e5425453dab99122e265a1b5f(Integer end, Integer start, Integer[] nums){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return start;
}
public static Integer func_2054761ec9874ff89f1ac877a07ca300(Integer end, Integer start, Integer[] nums){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return end;
}
public static Integer func_cdfae672ff874fb7b7c3987dad94436e(Integer right, Integer left, Integer[] nums){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return mid;
}
public static Integer func_f7adfdb96fa14e8f882173d837ab70a2(Integer right, Integer left, Integer[] nums){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return left;
}
public static Integer func_c958c4cc917f452e9e01d4050a4ba1a1(Integer right, Integer left, Integer[] nums){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return right;
}
public static Integer func_24e04ad3791e41039d4b6851564eda4f(Integer right, Integer left, Integer[] nums){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return left;
}
public static Integer func_2f6dc36a5c5447f3aef5d9328178096d(Integer right, Integer left, Integer[] nums){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return mid;
}
public static Integer func_65d0c279a59442018236af2a2434a91e(Integer right, Integer left, Integer[] nums){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return right;
}
public static Integer func_683182322c92424bae9d6ce611c8c215(Integer right, Integer left, Integer[] nums){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return right;
}
public static Integer func_8472be1f87ac4fe6804862c05390dc9e(Integer right, Integer left, Integer[] nums){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return left;
}
public static Integer func_8f07b168c54848709b21e0d295000b2d(Integer right, Integer left, Integer[] nums){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return mid;
}
public static Integer func_b348fe6f76c74119b091537bd243cfbb(Integer right, Integer left, Integer[] nums){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return right;
}
public static Integer func_fa5485fa10ed4be6ab990787bec01db0(Integer right, Integer left, Integer[] nums){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return mid;
}
public static Integer func_6b108c9b0efa4d35b4a6aaa10b7da7d3(Integer right, Integer left, Integer[] nums){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return left;
}
public static Integer func_6c514724318946f69e4329a5a53037f4(Integer end, Integer start, Integer[] nums){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return end;
}
public static Integer func_20ae485a964f456193e64365836b9294(Integer end, Integer start, Integer[] nums){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return start;
}
public static Integer func_b914cccaf7e54824ba97639fca407b16(Integer end, Integer start, Integer[] nums){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return mid;
}
public static Integer func_b7938c3dc7d64bfcafbbc962fdc7eed3(Integer right, Integer left, Integer[] nums){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return mid;
}
public static Integer func_2c05b62b276c489087557de84bbc3220(Integer right, Integer left, Integer[] nums){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return right;
}
public static Integer func_d53a6305602247a7aa1745b40e9a0949(Integer right, Integer left, Integer[] nums){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return left;
}
public static Integer func_e76c724d394449c6a4dd1b87d7bdfe83(Integer right, Integer left, Integer[] nums){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return left;
}
public static Integer func_3d2c7dd30f664d89a804fbaef7160896(Integer right, Integer left, Integer[] nums){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return right;
}
public static Integer func_f69450c805ed49f781d6f019e7e11630(Integer right, Integer left, Integer[] nums){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return mid;
}
public static Integer func_5c0c6c6ef955437280d8f96291df2e45(Integer right, Integer left, Integer[] nums){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return mid;
}
public static Integer func_ae85fff1818b4401aaef3c3960dc80c7(Integer right, Integer left, Integer[] nums){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return left;
}
public static Integer func_4fdbd6e4af684db2945d864831af41e4(Integer right, Integer left, Integer[] nums){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return right;
}
public static Integer func_6153598c32d7442eae4caf097657c0be(Integer right, Integer left, Integer[] nums){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return right;
}
public static Integer func_82ab531161cd4407b84d07ded7aeac99(Integer right, Integer left, Integer[] nums){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return left;
}
public static Integer func_2a8dd6d8b96b4c84a6e205754d6dd7ea(Integer right, Integer left, Integer[] nums){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return mid;
}
public static Integer func_19e2c9b95ce64db5945c720a658b5a6a(Integer right, Integer left, Integer[] nums){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return mid;
}
public static Integer func_5e01ea14950f449e84764a1185bd7ac2(Integer right, Integer left, Integer[] nums){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return right;
}
public static Integer func_76fb17889bc44652ac3949e44b26d7bd(Integer right, Integer left, Integer[] nums){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return left;
}
public static Integer func_302b589847f742b1aa7d463bd3237d06(Integer right, Integer left, Integer[] nums){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return mid;
}
public static Integer func_5f06feeb4fc044679554d2840f33b4bb(Integer right, Integer left, Integer[] nums){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return right;
}
public static Integer func_cf07c96304734d41b67060fc81ea24d0(Integer right, Integer left, Integer[] nums){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return left;
}
public static Integer func_b5b748b603f141f486a171bda082419c(Integer right, Integer left, Integer[] nums){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return left;
}
public static Integer func_ffdf92eecd5a4a06a9dbcabe759cbea1(Integer right, Integer left, Integer[] nums){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return right;
}
public static Integer func_9f65a2563a2b4fdcb27d81159bd9b1e4(Integer right, Integer left, Integer[] nums){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return mid;
}
public static Integer func_264c2bf6dcb948519dc1dfb3663eaa6a(Integer right, Integer left, Integer[] nums){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return mid;
}
public static Integer func_22caf71c928b4af4a083e64bebbc6218(Integer right, Integer left, Integer[] nums){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return left;
}
public static Integer func_f745d57c303c4a62be20fd58ad9f31d5(Integer right, Integer left, Integer[] nums){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return right;
}
public static Integer func_d44ceb0444ed4052a5eeefbbb91bdb2a(Integer end, Integer start, Integer[] nums){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return end;
}
public static Integer func_ae268267a6b34c6db1a0905b98c04c50(Integer end, Integer start, Integer[] nums){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return start;
}
public static Integer func_81b2f794f00444198dbe4b9fb177d7af(Integer end, Integer start, Integer[] nums){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return mid;
}
public static Integer func_f3ca56083c584789ae6e1bd474033f85(Integer right, Integer left, Integer[] nums){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return left;
}
public static Integer func_5391ea22bc804b819de68b108a7ef4ad(Integer right, Integer left, Integer[] nums){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return mid;
}
public static Integer func_bc35195e086044e1a684949bbdc069d8(Integer right, Integer left, Integer[] nums){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return right;
}
public static Integer func_ab5c7bdbd7f041c3a11470a1a32439c0(Integer right, Integer left, Integer[] nums){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return left;
}
public static Integer func_1f2002ee3b91464094a023fe0a5f2ec3(Integer right, Integer left, Integer[] nums){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return right;
}
public static Integer func_f110e30937a84ad9a784154435bc171c(Integer right, Integer left, Integer[] nums){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return midpoint;
}
public static Integer func_c98983ceb7634e22b05ec670fa360094(Integer right, Integer left, Integer[] nums){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return left;
}
public static Integer func_92ee8a1fa94f4874b28084091492d330(Integer right, Integer left, Integer[] nums){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return right;
}
public static Integer func_51d0388ffbb247aeb61ca908f1435e90(Integer right, Integer left, Integer[] nums){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return mid;
}


****** Cluster 3 ******
public static Integer func_92a0eafa07de41d288abf9324b3bf8a2(Integer end, Integer[] nums, Integer start){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return mid;
}
public static Integer func_248fcac30a08403fb0058d59610241f1(Integer end, Integer[] nums, Integer start){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return start;
}
public static Integer func_f860b6a017fb4eaf8f1b2c194aaf8a8d(Integer end, Integer[] nums, Integer start){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return end;
}
public static Integer func_099c5fe6f82240eb8f861dbffbacf36f(Integer right, Integer[] nums, Integer left){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return mid;
}
public static Integer func_4503549cc87f413a91a2c80b2f8f441a(Integer right, Integer[] nums, Integer left){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return left;
}
public static Integer func_9176ae9149c048fa9dd190d8eedfd935(Integer right, Integer[] nums, Integer left){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return right;
}
public static Integer func_bec61172d839412a9ced4b6100d91118(Integer right, Integer[] nums, Integer left){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return left;
}
public static Integer func_453105fa3d5844568ca852be26081f7d(Integer right, Integer[] nums, Integer left){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return mid;
}
public static Integer func_13d83da7ed874238a23efc51cc8913fe(Integer right, Integer[] nums, Integer left){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return right;
}
public static Integer func_6c641573e23f4259ba425e449369c31b(Integer right, Integer[] nums, Integer left){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return right;
}
public static Integer func_3c1214bb4d424309af813f3fd05b0a06(Integer right, Integer[] nums, Integer left){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return left;
}
public static Integer func_cfa223e195d7478995da452317f264a2(Integer right, Integer[] nums, Integer left){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return mid;
}
public static Integer func_5b5e139c89a142fb8ba524f3807d6dbb(Integer right, Integer[] nums, Integer left){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return right;
}
public static Integer func_4347eab29a5e417697bb72d0f1da5fc5(Integer right, Integer[] nums, Integer left){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return mid;
}
public static Integer func_61670545a5a742dc852d56932c51b581(Integer right, Integer[] nums, Integer left){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return left;
}
public static Integer func_850d19210d0c44dd87737c1c0eadfa1c(Integer end, Integer[] nums, Integer start){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return end;
}
public static Integer func_e5de5368074640fd8f123ebd87546115(Integer end, Integer[] nums, Integer start){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return start;
}
public static Integer func_5148c43500bc4e098df8b5cbda27c765(Integer end, Integer[] nums, Integer start){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return mid;
}
public static Integer func_a4d01d59819b401ca80eb1ee57bb6b21(Integer right, Integer[] nums, Integer left){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return mid;
}
public static Integer func_2e7ecfa45b1d4bdbb446f8264471b739(Integer right, Integer[] nums, Integer left){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return right;
}
public static Integer func_1d6f9deabcf444f38e9cbbe33b8c76eb(Integer right, Integer[] nums, Integer left){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return left;
}
public static Integer func_dad3d1a3f22f4414962d5dfcc6412625(Integer right, Integer[] nums, Integer left){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return left;
}
public static Integer func_464004e733844987b667a7ea780fb0ba(Integer right, Integer[] nums, Integer left){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return right;
}
public static Integer func_08e3899aa7b04bef92a1d85f3fa6193b(Integer right, Integer[] nums, Integer left){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return mid;
}
public static Integer func_50f74b3381cb4138bf2ccde5d23978ae(Integer right, Integer[] nums, Integer left){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return mid;
}
public static Integer func_66116dd04c1d40fabeb893ee1e1b4ee2(Integer right, Integer[] nums, Integer left){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return left;
}
public static Integer func_41a26b4137b746a19e212c3a84d49601(Integer right, Integer[] nums, Integer left){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return right;
}
public static Integer func_6d114c835a934932adbdbb118c8dbcb4(Integer right, Integer[] nums, Integer left){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return right;
}
public static Integer func_aca4297122e24b768ccbde4e7f80bfbe(Integer right, Integer[] nums, Integer left){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return left;
}
public static Integer func_ac68c47fcf844ab083944532240ec12b(Integer right, Integer[] nums, Integer left){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return mid;
}
public static Integer func_8cbaec7795f3427d97342537f8ca89f5(Integer right, Integer[] nums, Integer left){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return mid;
}
public static Integer func_e8692f52186b46b5a80a4f9e9fb0cd2f(Integer right, Integer[] nums, Integer left){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return right;
}
public static Integer func_196931c0010f4b44b519f8c9a8d11ff8(Integer right, Integer[] nums, Integer left){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return left;
}
public static Integer func_b09d318d6a9b4fe5a8b41bc9bcee805b(Integer right, Integer[] nums, Integer left){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return mid;
}
public static Integer func_2da947c900a8494a852e577ee2730d61(Integer right, Integer[] nums, Integer left){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return right;
}
public static Integer func_38cf14580ab045e1a718304d0d3fbd0d(Integer right, Integer[] nums, Integer left){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return left;
}
public static Integer func_af73c52b6631456ea35885bd84ce11ea(Integer right, Integer[] nums, Integer left){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return left;
}
public static Integer func_b60e49d408114b9b8b72c0cd5a54074e(Integer right, Integer[] nums, Integer left){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return right;
}
public static Integer func_a3cee7fa5ead4baab7511b0cc90f821e(Integer right, Integer[] nums, Integer left){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return mid;
}
public static Integer func_89050ee92f724672a214eb783bf30728(Integer right, Integer[] nums, Integer left){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return mid;
}
public static Integer func_47f69c85411e4a099a30cdd947c34fbc(Integer right, Integer[] nums, Integer left){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return left;
}
public static Integer func_82536cfaa82d4e84a967fdfebdb8d784(Integer right, Integer[] nums, Integer left){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return right;
}
public static Integer func_75dfcf4dcc04441ba6ed8478dbbfd7b4(Integer end, Integer[] nums, Integer start){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return end;
}
public static Integer func_39403698f83e48ea96e6067060e9c831(Integer end, Integer[] nums, Integer start){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return start;
}
public static Integer func_e8ec3b1a103f4a23904ab2357b7e9984(Integer end, Integer[] nums, Integer start){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return mid;
}
public static Integer func_a78f7214531f4c8b9adb2c1e6d4d5df5(Integer right, Integer[] nums, Integer left){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return left;
}
public static Integer func_580b5250e0034175986dc62e6f0f4eb4(Integer right, Integer[] nums, Integer left){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return mid;
}
public static Integer func_93fb0dd5f2d742c4bb88cb716ea3eb22(Integer right, Integer[] nums, Integer left){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return right;
}
public static Integer func_806d5db3bcb3423b9df1f98bb4e7569a(Integer right, Integer[] nums, Integer left){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return left;
}
public static Integer func_b8d265efadc34c38942a885dc55edfef(Integer right, Integer[] nums, Integer left){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return right;
}
public static Integer func_6813b5984f754f92b28c94adaa10c9c7(Integer right, Integer[] nums, Integer left){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return midpoint;
}
public static Integer func_4cf31381f69a49e9bf232294f31a62f1(Integer right, Integer[] nums, Integer left){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return left;
}
public static Integer func_b9a399b3c58e4b2d83e0addebb3e770b(Integer right, Integer[] nums, Integer left){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return right;
}
public static Integer func_b56e611b206e454aaf04c19f65f1621f(Integer right, Integer[] nums, Integer left){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return mid;
}


****** Cluster 5 ******
public static Integer func_90ed9607a1de4aae8ef9f00cdcb8408d(Integer[] nums, Integer end, Integer start){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return mid;
}
public static Integer func_88cd4e701bf043e9a58ca16ffb453f98(Integer[] nums, Integer end, Integer start){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return start;
}
public static Integer func_32f826582ba04cdab0da6febe191a45a(Integer[] nums, Integer end, Integer start){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return end;
}
public static Integer func_7b794014bf1943f4a1698d7173a76360(Integer[] nums, Integer right, Integer left){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return mid;
}
public static Integer func_dd23b18713814c9ebfb48375978eca3e(Integer[] nums, Integer right, Integer left){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return left;
}
public static Integer func_aa3207b927254f7986bdf576fb49e4da(Integer[] nums, Integer right, Integer left){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return right;
}
public static Integer func_2f1ab9cfa55f46e5bde719c4e987b8d4(Integer[] nums, Integer right, Integer left){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return left;
}
public static Integer func_027a705b0187464099f3b5e7396efbb8(Integer[] nums, Integer right, Integer left){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return mid;
}
public static Integer func_9767cf35bf894ec09312acd731d8c267(Integer[] nums, Integer right, Integer left){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return right;
}
public static Integer func_a168b24779ca4c83a0bb0df4e934a1d4(Integer[] nums, Integer right, Integer left){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return right;
}
public static Integer func_fa6571ade4f44e8b8d1951e9f8525d74(Integer[] nums, Integer right, Integer left){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return left;
}
public static Integer func_cbeeef5f2dc94c60b85d31e42c3f9787(Integer[] nums, Integer right, Integer left){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return mid;
}
public static Integer func_354c93d6aee0422c965f3434303a3669(Integer[] nums, Integer right, Integer left){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return right;
}
public static Integer func_697dbdec788d4583a2bb894a88f7a605(Integer[] nums, Integer right, Integer left){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return mid;
}
public static Integer func_99c9036d14fc4c71a572e6aff43addfe(Integer[] nums, Integer right, Integer left){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return left;
}
public static Integer func_f330fe3529f640c2befe46d9363846b6(Integer[] nums, Integer end, Integer start){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return end;
}
public static Integer func_7a26f2e779624a0f92a314544242963d(Integer[] nums, Integer end, Integer start){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return start;
}
public static Integer func_5483ae2f992247659f57e926b1b881ac(Integer[] nums, Integer end, Integer start){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return mid;
}
public static Integer func_5ecefc62817c4697b59fa6724a175d04(Integer[] nums, Integer right, Integer left){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return mid;
}
public static Integer func_5c5404b1aa2e453c93a163f9676ca750(Integer[] nums, Integer right, Integer left){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return right;
}
public static Integer func_4acd8aac27ca45b3842a12fe80c5e8ec(Integer[] nums, Integer right, Integer left){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return left;
}
public static Integer func_befe90e70c244f6a8d782e24d312bfd6(Integer[] nums, Integer right, Integer left){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return left;
}
public static Integer func_5778320b95a1457fa3fac02aed19828f(Integer[] nums, Integer right, Integer left){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return right;
}
public static Integer func_b34052154fc2431ba20c81001157eaba(Integer[] nums, Integer right, Integer left){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return mid;
}
public static Integer func_03e3a9cc04134b72938d6816f009e8ff(Integer[] nums, Integer right, Integer left){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return mid;
}
public static Integer func_5c8ed1302781422fa41a0aa062d8b209(Integer[] nums, Integer right, Integer left){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return left;
}
public static Integer func_c6c38bc0944241dfa7c35ce7ddf4503b(Integer[] nums, Integer right, Integer left){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return right;
}
public static Integer func_0fab694944da4b3fa32ef0951787f61e(Integer[] nums, Integer right, Integer left){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return right;
}
public static Integer func_a67fb012f72644ca902c720f5f51a17f(Integer[] nums, Integer right, Integer left){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return left;
}
public static Integer func_339c237b9ed14d07a22f4aebfb63dce2(Integer[] nums, Integer right, Integer left){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return mid;
}
public static Integer func_76ee69923ef14573b9a6650600b85e6a(Integer[] nums, Integer right, Integer left){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return mid;
}
public static Integer func_df9b7d7a12e84135a3b16425a3aa79b8(Integer[] nums, Integer right, Integer left){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return right;
}
public static Integer func_1fb181fa3dac41d6975e12b07b56d818(Integer[] nums, Integer right, Integer left){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return left;
}
public static Integer func_1d71a4e1436d457eaca44dba242fd8e0(Integer[] nums, Integer right, Integer left){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return mid;
}
public static Integer func_56768d71c7ec47fca4812fd8814a298f(Integer[] nums, Integer right, Integer left){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return right;
}
public static Integer func_ae735cb808b34b76be710a400ea2f73e(Integer[] nums, Integer right, Integer left){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return left;
}
public static Integer func_c50099d8ca824702b6171e2f816d7486(Integer[] nums, Integer right, Integer left){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return left;
}
public static Integer func_d1a947dc507442b9ac2e0e26077923cb(Integer[] nums, Integer right, Integer left){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return right;
}
public static Integer func_99bfd11b8c6f43e68ab13ec36e31a8bf(Integer[] nums, Integer right, Integer left){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return mid;
}
public static Integer func_be3ea7a936034464987f323a3cdf5c03(Integer[] nums, Integer right, Integer left){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return mid;
}
public static Integer func_077b11fcbd5541219c36b76ae27d938c(Integer[] nums, Integer right, Integer left){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return left;
}
public static Integer func_50eec11916264bb1afb6d49ad2935039(Integer[] nums, Integer right, Integer left){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return right;
}
public static Integer func_0644d56992ff493d91d4ab5869f8fd8f(Integer[] nums, Integer end, Integer start){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return end;
}
public static Integer func_1329063b245a4f35b1c9f30a19e37194(Integer[] nums, Integer end, Integer start){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return start;
}
public static Integer func_1bdba40fdd1d44f3abd065721326d003(Integer[] nums, Integer end, Integer start){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return mid;
}
public static Integer func_e4c58cdd6167454a87509a9096af1b4c(Integer[] nums, Integer right, Integer left){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return left;
}
public static Integer func_ef0ebe9f9036429f91e70e049afbf10e(Integer[] nums, Integer right, Integer left){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return mid;
}
public static Integer func_aa11815d0f3d4c7eb365705d65a4ddeb(Integer[] nums, Integer right, Integer left){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return right;
}
public static Integer func_f04dc2eabe054629abdd56286e462e16(Integer[] nums, Integer right, Integer left){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return left;
}
public static Integer func_6d0cab70fd634ad39085a2f4913a2785(Integer[] nums, Integer right, Integer left){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return right;
}
public static Integer func_c9796f55bdef4cfd8110e2b7c127c72a(Integer[] nums, Integer right, Integer left){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return midpoint;
}
public static Integer func_8fe627dd81f74424a6bc60905f73af10(Integer[] nums, Integer right, Integer left){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return left;
}
public static Integer func_aa610b9bb87348449bddf24a3f158b1d(Integer[] nums, Integer right, Integer left){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return right;
}
public static Integer func_6a86c3bbb5854559b602a39254295cb0(Integer[] nums, Integer right, Integer left){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return mid;
}


****** Cluster 7 ******
public static Integer func_4d27a8ecdd3a47b0b7d41b4d1ea387ad(Integer[] nums, Integer start, Integer end){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return mid;
}
public static Integer func_6a59a67f58d64db4ac70619d7f659387(Integer[] nums, Integer start, Integer end){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return start;
}
public static Integer func_d7226619daeb4276b9210fac958871de(Integer[] nums, Integer start, Integer end){
    // 4
    // 5
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 6
        // 7
        start = mid + 1;
    } else {
        // 8
        // 9
        end = mid;
    }
    return end;
}
public static Integer func_0c116968527045aebebb1ffcf1425065(Integer[] nums, Integer left, Integer right){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return mid;
}
public static Integer func_e2670ade91154aa2be6a5a9d0e02b5e4(Integer[] nums, Integer left, Integer right){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return left;
}
public static Integer func_456b410d60c24b6aba18df566d3ea708(Integer[] nums, Integer left, Integer right){
    // 13
    // 14
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 15
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 16
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 17
        // 18
        left = mid + 1;
    } else {
        // 19
        // 20
        right = mid - 1;
    }
    return right;
}
public static Integer func_4634dc6b71fa4e5bab264bcda46ee37d(Integer[] nums, Integer left, Integer right){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return left;
}
public static Integer func_7d89a1e6d7264dba9649a252faff2771(Integer[] nums, Integer left, Integer right){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return mid;
}
public static Integer func_20754aa119ba4d2abe59f1621ef613f4(Integer[] nums, Integer left, Integer right){
    // 24
    // 25
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 26
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 27
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 28
        // 29
        left = mid + 1;
    } else {
        // 30
        // 31
        right = mid - 1;
    }
    return right;
}
public static Integer func_6b2aa6367d10498c94da17df6a489ac9(Integer[] nums, Integer left, Integer right){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return right;
}
public static Integer func_e39527de8e0145e4b936f6e88b34185f(Integer[] nums, Integer left, Integer right){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return left;
}
public static Integer func_4588a7d043804444acf3a78d9ed9a0fa(Integer[] nums, Integer left, Integer right){
    // 35
    // 36
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 37
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 38
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 39
        // 40
        left = mid + 1;
    } else {
        // 41
        // 42
        right = mid - 1;
    }
    return mid;
}
public static Integer func_a7d5c8da3140467b87ec797070f4e9d1(Integer[] nums, Integer left, Integer right){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return right;
}
public static Integer func_bb0f58c20fe04a1c98fa2052817f2439(Integer[] nums, Integer left, Integer right){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return mid;
}
public static Integer func_7d821a8f90f44aeeb279420ec7dc35fb(Integer[] nums, Integer left, Integer right){
    // 45
    // 46
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 47
        // 48
        left = mid + 1;
    } else {
        // 49
        // 50
        right = mid;
    }
    return left;
}
public static Integer func_fa4e4d04107141428ad284f4613474d8(Integer[] nums, Integer start, Integer end){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return end;
}
public static Integer func_9aaef2d8c056415399bc23b50d0e8f0b(Integer[] nums, Integer start, Integer end){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return start;
}
public static Integer func_5095336a57804afa80ea6fc1a78de15b(Integer[] nums, Integer start, Integer end){
    // 63
    // 64
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 65
        // 66
        start = mid + 1;
    } else {
        // 67
        // 68
        end = mid;
    }
    return mid;
}
public static Integer func_4edbe3fc3a034ec289c5264bf65f8def(Integer[] nums, Integer left, Integer right){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return mid;
}
public static Integer func_e37e991c87b84747918047f02afd30d4(Integer[] nums, Integer left, Integer right){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return right;
}
public static Integer func_f6278594df2f4a89aa43f0d12b8d0b8d(Integer[] nums, Integer left, Integer right){
    // 72
    // 73
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 74
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 75
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 76
        // 77
        left = mid + 1;
    } else {
        // 78
        // 79
        right = mid - 1;
    }
    return left;
}
public static Integer func_e2fd8f7cf51d4dfaa1e484740749a9d2(Integer[] nums, Integer left, Integer right){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return left;
}
public static Integer func_ae5e9273fb844b76b1bab9404817a00e(Integer[] nums, Integer left, Integer right){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return right;
}
public static Integer func_0ba6df3018b14142ade506c5e1120a12(Integer[] nums, Integer left, Integer right){
    // 83
    // 84
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 85
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 86
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 87
        // 88
        left = mid + 1;
    } else {
        // 89
        // 90
        right = mid - 1;
    }
    return mid;
}
public static Integer func_d9fd974586e9402d9860463ea0a1a895(Integer[] nums, Integer left, Integer right){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return mid;
}
public static Integer func_f81952adb16c4e51a0b84e91985763c2(Integer[] nums, Integer left, Integer right){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return left;
}
public static Integer func_b30fd2a5d15647e4bae0cacb6563782c(Integer[] nums, Integer left, Integer right){
    // 94
    // 95
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 96
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 97
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 98
        // 99
        left = mid + 1;
    } else {
        // 100
        // 101
        right = mid - 1;
    }
    return right;
}
public static Integer func_7a46291098ee42e0a109ac5cb6ac6ab9(Integer[] nums, Integer left, Integer right){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return right;
}
public static Integer func_f92d8f3d57f6428283b196c59572bacc(Integer[] nums, Integer left, Integer right){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return left;
}
public static Integer func_c4b233fec1a44993a85e113859edab59(Integer[] nums, Integer left, Integer right){
    // 105
    // 106
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 107
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 108
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 109
        // 110
        left = mid + 1;
    } else {
        // 111
        // 112
        right = mid - 1;
    }
    return mid;
}
public static Integer func_44742ddd57604b1ebc3512e4db10fd77(Integer[] nums, Integer left, Integer right){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return mid;
}
public static Integer func_f9a453de06af4c7c9ed4afc022c3a84d(Integer[] nums, Integer left, Integer right){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return right;
}
public static Integer func_d53e7fac9c944fad8ded599330658145(Integer[] nums, Integer left, Integer right){
    // 116
    // 117
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[right]) {
        // 118
        // 119
        left = mid + 1;
    } else {
        // 120
        // 121
        right = mid;
    }
    return left;
}
public static Integer func_cc1730f6fdc14633b8ce1c13bca6a211(Integer[] nums, Integer left, Integer right){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return mid;
}
public static Integer func_2d4bc871721a4466877a1477d0b54d68(Integer[] nums, Integer left, Integer right){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return right;
}
public static Integer func_5c4d1bf8bab24688af0ae7d93b212364(Integer[] nums, Integer left, Integer right){
    // 125
    // 126
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 127
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 128
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 129
        // 130
        left = mid + 1;
    } else {
        // 131
        // 132
        right = mid - 1;
    }
    return left;
}
public static Integer func_61ae2210342945bd88a854ca2e19ed3c(Integer[] nums, Integer left, Integer right){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return left;
}
public static Integer func_c8ab25a9e15249498f2e267e198827b0(Integer[] nums, Integer left, Integer right){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return right;
}
public static Integer func_cf0be97c3c5044af86ccaf5150cb77b9(Integer[] nums, Integer left, Integer right){
    // 135
    // 136
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1])
        return nums[mid + 1];
    if (nums[mid - 1] > nums[mid])
        return nums[mid];
    if (// 137
    nums[mid] > nums[0])
        // 137
        left = mid + 1;
    else
        // 138
        right = mid - 1;
    return mid;
}
public static Integer func_46532fca3367415abe38b3fdb34c3e73(Integer[] nums, Integer left, Integer right){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return mid;
}
public static Integer func_f6d86816a9ce4644b60cd89ad25573d9(Integer[] nums, Integer left, Integer right){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return left;
}
public static Integer func_5e89067bcb7c425fb914e635b16569b7(Integer[] nums, Integer left, Integer right){
    // 142
    // 143
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 144
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 145
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 146
        // 147
        left = mid + 1;
    } else {
        // 148
        // 149
        right = mid - 1;
    }
    return right;
}
public static Integer func_6164ef2a4ac14605970e6c6db2fcf6cf(Integer[] nums, Integer start, Integer end){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return end;
}
public static Integer func_0d1b5facf4ec41b1838b23160dcbbb2a(Integer[] nums, Integer start, Integer end){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return start;
}
public static Integer func_e38100bbbfb64580b2032c11fb4b4fda(Integer[] nums, Integer start, Integer end){
    // 152
    // 153
    int mid = start + (end - start) / 2;
    if (nums[mid] > nums[end]) {
        // 154
        // 155
        start = mid + 1;
    } else {
        // 156
        // 157
        end = mid;
    }
    return mid;
}
public static Integer func_fba6395df9264ee79feb6069e4d1ca86(Integer[] nums, Integer left, Integer right){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return left;
}
public static Integer func_2c884295725a404e878f92aa2ef289f2(Integer[] nums, Integer left, Integer right){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return mid;
}
public static Integer func_2d1c1d5145454c4e9048985a829caba4(Integer[] nums, Integer left, Integer right){
    // 161
    // 162
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 163
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 164
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 165
        // 166
        left = mid + 1;
    } else {
        // 167
        // 168
        right = mid - 1;
    }
    return right;
}
public static Integer func_ac966f1b436e447e901fb2d6c71b57f4(Integer[] nums, Integer left, Integer right){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return left;
}
public static Integer func_20c05230717b4072be2054c1687eed72(Integer[] nums, Integer left, Integer right){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return right;
}
public static Integer func_8e5ad1a541514bb585ef03573a385e27(Integer[] nums, Integer left, Integer right){
    // 180
    // 181
    int midpoint = left + (right - left) / 2;
    if (nums[midpoint] > nums[right]) {
        // 182
        // 183
        left = midpoint + 1;
    } else {
        // 184
        // 185
        right = midpoint;
    }
    return midpoint;
}
public static Integer func_fbacc5ad7e1643d7939f9839881caeea(Integer[] nums, Integer left, Integer right){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return left;
}
public static Integer func_e02199d28b4442519429897b06b5878a(Integer[] nums, Integer left, Integer right){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return right;
}
public static Integer func_59bdad8c70274d85ab68e1eb57b2052c(Integer[] nums, Integer left, Integer right){
    // 189
    // 190
    int mid = left + (right - left) / 2;
    if (nums[mid] > nums[mid + 1]) {
        // 191
        return nums[mid + 1];
    }
    if (nums[mid - 1] > nums[mid]) {
        // 192
        return nums[mid];
    }
    if (nums[mid] > nums[0]) {
        // 193
        // 194
        left = mid + 1;
    } else {
        // 195
        // 196
        right = mid - 1;
    }
    return mid;
}


****** Cluster 18 ******
public static int func_e80dc47984c24df19dd7f43b8f0d3ee0(Integer[] nums){
    if (// 1
    nums == null || nums.length == 0)
        // 2
        throw new IllegalArgumentException("Invalid input");
    // 3
    int start = 0, end = nums.length - 1;
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return nums[start];
}
public static int func_47e801a286914cb68365c57b090b0515(Integer[] nums){
    if (nums == null || nums.length == 0) {
        // 43
        return -1;
    }
    // 44
    int left = 0, right = nums.length - 1;
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return nums[left];
}
public static int func_f4f7621103cd4f0c8bbed4cf88e0398f(Integer[] nums){
    if (nums == null || nums.length == 0) {
        // 60
        throw new IllegalArgumentException("Invalid input");
    }
    // 61
    int start = 0;
    // 62
    int end = nums.length - 1;
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return nums[start];
}
public static int func_cef6af05939440f6b6c23acf8a05480e(Integer[] nums){
    if (nums == null || nums.length == 0) {
        // 114
        throw new IllegalArgumentException("Invalid input");
    }
    // 115
    int left = 0, right = nums.length - 1;
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return nums[left];
}
public static int func_8c8e53cc1cd34320884925d4b5e42994(Integer[] nums){
    if (// 150
    nums == null || nums.length == 0)
        return -1;
    // 151
    int start = 0, end = nums.length - 1;
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return nums[start];
}
public static int func_703248e27b37484cb06f8c85d0aef8ec(Integer[] nums){
    // 179
    int left = 0, right = nums.length - 1;
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return nums[left];
}


****** Cluster 19 ******
public static Integer func_a53a4618f4464188b3376388372b969a(Integer start, Integer end, Integer[] nums){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return start;
}
public static Integer func_811faaae73244c36838c7237a48bd22d(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_73b0fc5102fa46dbb6bfcd4bcb503672(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_fd4758dac78f4dd68f977a0290fb9c4a(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_b26e950e063b4f3aaa57677f8b216303(Integer left, Integer right, Integer[] nums){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return left;
}
public static Integer func_964e93a05062425d9a0acc4586d3e896(Integer start, Integer end, Integer[] nums){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return start;
}
public static Integer func_f03f6e316f4d4521bd1b6296d23c697a(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_9e41129e61a54fcbb8445ebe019e7e92(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_c275f2045fc44e17a47b5f4b63718e16(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_e96d406acaff46b587fa267ca7b08aa4(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_ae53a7f098d5433f9655d79aee42b5b9(Integer left, Integer right, Integer[] nums){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return left;
}
public static Integer func_c3a35b1da5f844fa83fa7c032d4f0610(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_8883a2e49a594613b818e0f6423884ac(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return left;
}
public static Integer func_4e88f7de392f4f5aabad87a0b0906bc2(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_40a477475e8c454fab638e3c4220629e(Integer start, Integer end, Integer[] nums){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return start;
}
public static Integer func_89757a273a2d41588c6e16c0d2174d5f(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_3f72cb283bf244afa5976c1ea77770e8(Integer left, Integer right, Integer[] nums){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return left;
}
public static Integer func_7f79df67648a49189b9027270ecfa19c(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return left;
}


****** Cluster 20 ******
public static Integer func_1c41b52b2c4a40e7b24141703d23998d(Integer end, Integer start, Integer[] nums){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return start;
}
public static Integer func_1826ceeede7c4a04864b806918c8ba42(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_d969fff4d880434980a2e4ce655c9785(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_00e624e915014fceb1645723a54df30e(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_27145bb01d2042b68adae2bec1354a02(Integer right, Integer left, Integer[] nums){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return left;
}
public static Integer func_c62d6fd8255d4e58a41a519c109c2bd1(Integer end, Integer start, Integer[] nums){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return start;
}
public static Integer func_6bcdb8344f274d6fa9208f6c5d722673(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_9bb0e923be8b4249bcd366ce294a3d02(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_8bda96b6e52549efb2d9e87752165e36(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_1af5b8e10edf403582ee0abc76b15914(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_d3f4dfbb3f824e318336a874bad07921(Integer right, Integer left, Integer[] nums){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return left;
}
public static Integer func_3fff27d38dc546d1bfe583bf7d0fe1d2(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_0722ffb0745641e0859c8409bc978b9d(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return left;
}
public static Integer func_8fd7ee3cadce4676bc143998de604878(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_e020e4dfd96646d9a715a834af4fbce7(Integer end, Integer start, Integer[] nums){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return start;
}
public static Integer func_a8f08e2ce1db45b184ba1d57a569aed2(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_8aa031df77504488883cec37d4e768b8(Integer right, Integer left, Integer[] nums){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return left;
}
public static Integer func_792133b84e214f01b0b3fe87ec553258(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return left;
}


****** Cluster 21 ******
public static Integer func_34d96afd0d114bb29e6b658012de07a4(Integer end, Integer[] nums, Integer start){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return start;
}
public static Integer func_0373ce5db1cc4d739e8cb3b73240c993(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_a704edd06d384fb2a06849c440668c22(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_18ff9a340ece46fdbcf30602af1acb70(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_eea7f8053c414e619ff30216c3a3b2a2(Integer right, Integer[] nums, Integer left){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return left;
}
public static Integer func_7eb89d65531e4f4ca999996a4e15b084(Integer end, Integer[] nums, Integer start){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return start;
}
public static Integer func_091bbcdf97154ba88eef0bed562b71b4(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_1bbaa700b5f3473384b37d1de99fb8c4(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_28beb2f8c7414ee5ade2bb909c978824(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_d9bd3dff626d4a1f819f260d97fd6bd2(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_b2fcfb693dc44d7eadc84f96a03f0606(Integer right, Integer[] nums, Integer left){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return left;
}
public static Integer func_c1acd105f4474836b51bea323d6bfdd1(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_e1bb759739e041569cfe631d77398243(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return left;
}
public static Integer func_2fd1e0ffb5694a4bb7e7c25c771a2fb1(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_f15eb276d9224417804fac43b2712083(Integer end, Integer[] nums, Integer start){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return start;
}
public static Integer func_117225e015e94223b3a4970fc1df0b87(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_fe9a89fc095f44839f1d8ec11b59d4b8(Integer right, Integer[] nums, Integer left){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return left;
}
public static Integer func_fa62e558e0ab4d23909e75082131cb66(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return left;
}


****** Cluster 22 ******
public static Integer func_4789328d33cc4e18bf894276448b7fdd(Integer start, Integer[] nums, Integer end){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return start;
}
public static Integer func_6ce79ed564a64d5fbeac999f0e20ab5c(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_7151594332e44ddd8efd6bc65500e9ea(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_f99cc8767ae44c36a469ec880a34e805(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_3ca8c31528874dd68d208ac72c115fa0(Integer left, Integer[] nums, Integer right){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return left;
}
public static Integer func_53b85ba604fb441d964c6d9881799674(Integer start, Integer[] nums, Integer end){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return start;
}
public static Integer func_66ccc392c4c647a797fb121b59ef2938(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_8a0fee43e45c4cfd806c0437d5c48cf9(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_73aee066ad0e40cca0e5bafaa39ae123(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_25c91756ce76494d8ce729cb6fb9bf36(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_5df50670a7d049f091c65ba662cebdb4(Integer left, Integer[] nums, Integer right){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return left;
}
public static Integer func_8cf28abe2a3b421e9910b9fd51cc049d(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_7a8e7de4d86b451ab9e7665f0242892b(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return left;
}
public static Integer func_277da61f20f1493285680d94d0a02dc9(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_f11c2f9125c647e5911297d755fef73c(Integer start, Integer[] nums, Integer end){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return start;
}
public static Integer func_b4e070b7eb1b4234a74508317329c676(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_5d5520eb33094bef821ec9a4465b95a7(Integer left, Integer[] nums, Integer right){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return left;
}
public static Integer func_d0d57c38ad1b4142b1a6adba7fa4ea70(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return left;
}


****** Cluster 23 ******
public static Integer func_5089f1bd129843b4949b3206856c6ef6(Integer[] nums, Integer start, Integer end){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return start;
}
public static Integer func_d252cd6d9f3e4d399e50cc4a64bea14d(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_f8dd06acfdda43ccbf7b89ceeded4823(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_e7861d1642b3432d83353801bae1a132(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_961dfee60e9346b2ab341c1ad8acfa77(Integer[] nums, Integer left, Integer right){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return left;
}
public static Integer func_ec857f5cfacc497281ed08324ee64beb(Integer[] nums, Integer start, Integer end){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return start;
}
public static Integer func_3bf96256972f43d9a118883bff497e56(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_b7336533099144219b6403ab8852d623(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_0078bdfe73fb4bbb807659f4b736c1a8(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_8ed9314ba9394afa89be7e528ba68c10(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_f598d6aab99549699244a468d67059b6(Integer[] nums, Integer left, Integer right){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return left;
}
public static Integer func_5018278e0fdc4a09a1a00727e2af815b(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_b46b49271a5147e9b8307a51170ce525(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return left;
}
public static Integer func_6abc9f097db24a1ba74f6e149cb27ca4(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_94aacb1fc3d044fdba61ad4106300fe7(Integer[] nums, Integer start, Integer end){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return start;
}
public static Integer func_8bb03aaef6c14cdb8ac532a32b6765c2(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_4709e3b70dea4ccb8e5b9ce81d6676de(Integer[] nums, Integer left, Integer right){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return left;
}
public static Integer func_8c253b9e876d43d684dfddbd6a4857ce(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return left;
}


****** Cluster 24 ******
public static Integer func_f75108c77db64e9482e85cea77fa1b74(Integer[] nums, Integer end, Integer start){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return start;
}
public static Integer func_f1198e094dce4cbebcdca19246e02a1c(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_0bedbbbb5f3447adb9ccb3da54c1bc20(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_bec102407f994bde81d6b05e3bde6a3b(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_d3784e5cfcc64ecdbb5fe1f97a9d44a5(Integer[] nums, Integer right, Integer left){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return left;
}
public static Integer func_bcaedfee0e944181816905c8aa561db7(Integer[] nums, Integer end, Integer start){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return start;
}
public static Integer func_37e3e87bc98e4622b48a12e236fc852b(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_be965cd514784efe91ab732d51700d0c(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_1efc6cc6c8f944af978f1082bd4d10a4(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_734f0053f00f4ceb9c41e48d430aa376(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_434593e0401b45a9a74f661bbd8f4da2(Integer[] nums, Integer right, Integer left){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return left;
}
public static Integer func_da89c0ca10404655bd75a91a1fbd7466(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_24e1d796f83c4ccf949b664e60e2415e(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return left;
}
public static Integer func_71527b5aff1d4c5f8a65c4be3d9b3166(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_91c5b1d2887f45ac923ecb9863166ff9(Integer[] nums, Integer end, Integer start){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return start;
}
public static Integer func_79910fced5684287a1738b2fcea92380(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return left;
}
public static Integer func_12b055675b0c4dd5917ff53a984da748(Integer[] nums, Integer right, Integer left){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return left;
}
public static Integer func_b32d9edc567449c48ac4286c818e656b(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return left;
}


****** Cluster 25 ******
public static Integer func_20db5cd1918f4ee2b2643498809ea83d(Integer start, Integer end, Integer[] nums){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return end;
}
public static Integer func_d0146e5616c2442d84f572c6a4d59cd7(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_547ef3f901f34e9cbe5c28f09145d0df(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_ad2478d65b8549c8bbe70d70d532c829(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_2d57b8a2c0034bd6987b7238cfc91628(Integer left, Integer right, Integer[] nums){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return right;
}
public static Integer func_1ddfa39864924e4fabd6b4a9ceb4d12f(Integer start, Integer end, Integer[] nums){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return end;
}
public static Integer func_9c4787117b344e069669febd6a1728d6(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_de9f4df690994dd589ae3565b786e613(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_52b1f2362fc44478aa96cc7f6895654c(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_0d1fb5ec53f04655896e93a94836e5ab(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_3efc1e4434e24b6a8800bba0318fe1d1(Integer left, Integer right, Integer[] nums){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return right;
}
public static Integer func_729d808603624e86b2fbdea533ca8930(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_e77dfb8c938c4ea7829614be860e1cf9(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return right;
}
public static Integer func_d6d5216168314b21a2cf96671b75cf20(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_7f5e77151f4f4cee9f80989d095f1340(Integer start, Integer end, Integer[] nums){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return end;
}
public static Integer func_1405bdc6c2f742fab62ef0733af5253c(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_954bf16f983f4f64ba38c876bbf9f31e(Integer left, Integer right, Integer[] nums){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return right;
}
public static Integer func_0fcc9578a2a142369aefd54dbf8b366e(Integer left, Integer right, Integer[] nums){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return right;
}


****** Cluster 26 ******
public static Integer func_1eb3d9143cb44f0fb884e0efe0d0d17d(Integer end, Integer start, Integer[] nums){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return end;
}
public static Integer func_5b3271007d9d48abb9e9b6190b3f32bd(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_1484b22e2e5141df9a8d5ad260667d6b(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_4dff93f0340c4d038b430f00d539afa2(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_bf18c9d68fe74df49694cb74b18e7b85(Integer right, Integer left, Integer[] nums){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return right;
}
public static Integer func_fea394bd8d36461d82886695d32b538f(Integer end, Integer start, Integer[] nums){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return end;
}
public static Integer func_f5377a23d8fb40c0aa84cc9df69bb885(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_b816bf49fb0e44e89426ed03eef3b15a(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_80f0adf2ff4a4462ab5d6a287ee0bb9c(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_0f13ea3d7c6b4bbb9c8edb009116fd7a(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_35f9f38465014d2382c25b8ba807d89d(Integer right, Integer left, Integer[] nums){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return right;
}
public static Integer func_f6248882485a45bd9266ad8902bdfbff(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_e642d804fa604f33b50923ac41948cdb(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return right;
}
public static Integer func_b5c4df2a4cc34f86ac7ccf6bf322a7b9(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_e65dc83815b74b95bb0522e3a3c2bf15(Integer end, Integer start, Integer[] nums){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return end;
}
public static Integer func_9117b10bfb26407db4a74b1e12a6eea3(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_fae6b38c69634fc991b70a67173a6daa(Integer right, Integer left, Integer[] nums){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return right;
}
public static Integer func_faf2f71e374f420480309920c6adc2b6(Integer right, Integer left, Integer[] nums){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return right;
}


****** Cluster 27 ******
public static Integer func_7723c8fa1d524949a6c3aa92c4d7d47a(Integer end, Integer[] nums, Integer start){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return end;
}
public static Integer func_d4a5124df10246c88ec4083425e5d040(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_a42812149ded4b0097eca79c9208e61c(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_8508c02ac2a547ed8be2cf21907e77ae(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_e1ad6dc787e44992b52cc6da5503499d(Integer right, Integer[] nums, Integer left){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return right;
}
public static Integer func_af0c83bbdbf94b1ca014dfab2e437044(Integer end, Integer[] nums, Integer start){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return end;
}
public static Integer func_130fe54bec92476a9fe5dfda63f0f04a(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_39213555ebd2457ca961765d04ddb88c(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_46b33705a3204de2850dfcb35aa08bd7(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_bc56df44fbdd48c281627d9b61ca0318(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_60edbe1012a34010929be0cfe00c6471(Integer right, Integer[] nums, Integer left){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return right;
}
public static Integer func_9bd6ba50239c4a21bc782eaf476d08ca(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_c6ae4d36fcc84e438e1726c0dfda6679(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return right;
}
public static Integer func_cf4429d988504b9092120246c897d625(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_9b5c344ee2ac43a19bce476d2598167b(Integer end, Integer[] nums, Integer start){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return end;
}
public static Integer func_42b804e27ba34ebe8a58e6d23bbf2af6(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_8f4bd3677ee14b02bb4a4ede34d68873(Integer right, Integer[] nums, Integer left){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return right;
}
public static Integer func_7e2686cf81e04d7f8c0a665048aa8530(Integer right, Integer[] nums, Integer left){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return right;
}


****** Cluster 156 ******
public static Integer func_510c68e1da4640a29b95ab23fda8a5df(Integer start, Integer end, Integer[] nums){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return mid;
}
public static Integer func_8319a3ffc6b7434e87cd9b577f3323fe(Integer start, Integer end, Integer[] nums){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return end;
}
public static Integer func_8da109174b204687ba0c9fa9d2c8c396(Integer start, Integer end, Integer[] nums){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return start;
}


****** Cluster 29 ******
public static Integer func_a573eb7ec926410185ab5f35dc817802(Integer[] nums, Integer start, Integer end){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return end;
}
public static Integer func_05bbb75b2d65469dab5f9fcdf3fa59b6(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_027bebb880854b1cafb8ceba8905df8d(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_69c27772f8194d778f8f398c9a07b3cd(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_7b700c29814d4ca9b39e37288387e383(Integer[] nums, Integer left, Integer right){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return right;
}
public static Integer func_90184620f59040aba042a65b1ca21353(Integer[] nums, Integer start, Integer end){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return end;
}
public static Integer func_481396146bbf41b0a15ef0ead30ee7cf(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_88b2d0268e0e4d10b1fd54586d54c996(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_3b3fa213cb0c425a90bcd7660945b526(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_a767561b6a8141df823c32edfcac4cd6(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_e6fd8a5eeb8b47d49a2c72dee17b5a8e(Integer[] nums, Integer left, Integer right){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return right;
}
public static Integer func_64bbe20711734a6eb49ed16f064d625b(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_eae98f066f3c478d88a3efd424d6e66f(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return right;
}
public static Integer func_d2222f209a074cffa110f81dbd662e5c(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_d84304fe7505476d8187337a11891ae8(Integer[] nums, Integer start, Integer end){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return end;
}
public static Integer func_782dec2e34dd4975953f241e46e3ca7f(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_fd96a52ffde64765846d9a975c15ee8f(Integer[] nums, Integer left, Integer right){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return right;
}
public static Integer func_129389331a014084b1d1d4f172432612(Integer[] nums, Integer left, Integer right){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return right;
}


****** Cluster 30 ******
public static Integer func_88540275a0f94c69b9d14c7734c010ce(Integer[] nums, Integer end, Integer start){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return end;
}
public static Integer func_a4eb4550bdd54e0a9b3ca79a9cc5777b(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_4c3f21e0a3df4fa49ef32001a5869727(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_a5d0ae480cc74017a72f4a3ba8e1f804(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_40ff5b54aef6424b97616836632c47c0(Integer[] nums, Integer right, Integer left){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return right;
}
public static Integer func_cc6525dd6e184c6699e7083a9077dabd(Integer[] nums, Integer end, Integer start){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return end;
}
public static Integer func_943c383683944b8aa3f8f9ea37d05f56(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_6fb4cf047c9540aaa1d0e41f04277b0d(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_b1deb3af8e034fc1ba2dd496a4cf275e(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_fb7d8ceb428947ff8f0ff17f67af90eb(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_e26e675b14d94f758138967afbe30af9(Integer[] nums, Integer right, Integer left){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return right;
}
public static Integer func_a45176d27a3845358f6561b1cb330de2(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_e946656dfb964eb0ac068cbb4e3f1b51(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return right;
}
public static Integer func_f966043e5b4243d69caabd557df364b0(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_08ca8663fe22442d9a806b926e668949(Integer[] nums, Integer end, Integer start){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return end;
}
public static Integer func_5a3794928e864a5da1d96626f0cd3289(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_ca780bdba84d472c9f35f86b9f5c1d33(Integer[] nums, Integer right, Integer left){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return right;
}
public static Integer func_e1b0647575c648d890b8c58b4d214e40(Integer[] nums, Integer right, Integer left){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return right;
}


****** Cluster 159 ******
public static Integer func_2cfdae1475d54a709ec9c14e66dfecad(Integer[] nums, Integer end, Integer start){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return mid;
}
public static Integer func_6c689f22e1bc41cdb80e20ee2dd388ab(Integer[] nums, Integer end, Integer start){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return end;
}
public static Integer func_88a6377b4b7d4b9497e6e3bc53411c88(Integer[] nums, Integer end, Integer start){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return start;
}


****** Cluster 160 ******
public static Integer func_164cee7a034a49998c7403f8cf55af74(Integer[] nums, Integer start, Integer end){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return mid;
}
public static Integer func_e5423c38d0db4099ac09ae51662b6a30(Integer[] nums, Integer start, Integer end){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return end;
}
public static Integer func_b35782fb4f854fe782a024078626d3be(Integer[] nums, Integer start, Integer end){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return start;
}


****** Cluster 155 ******
public static Integer func_f20beb32ee274b32ac724f89111824fe(Integer end, Integer start, Integer[] nums){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return mid;
}
public static Integer func_78aff7c0026143a6b1513b6061a7c04b(Integer end, Integer start, Integer[] nums){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return end;
}
public static Integer func_287e6db8bf3340149b3b0f49c7905934(Integer end, Integer start, Integer[] nums){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return start;
}


****** Cluster 49 ******
public static int func_38fa1037106045549321cb95879a285d(Integer[] nums){
    if (nums.length == 1) {
        // 10
        return nums[0];
    }
    // 11
    int left = 0, right = nums.length - 1;
    if (nums[right] > nums[0]) {
        // 12
        return nums[0];
    }
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return -1;
}
public static int func_011db2de9bd64f79aa9cc8c30fe5c440(Integer[] nums){
    if (nums.length == 1) {
        // 21
        return nums[0];
    }
    // 22
    int left = 0, right = nums.length - 1;
    if (nums[right] > nums[0]) {
        // 23
        return nums[0];
    }
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return -1;
}
public static int func_d9358154fd6c41cfbfbc2bbad49f8fcc(Integer[] nums){
    if (nums.length == 1) {
        // 32
        return nums[0];
    }
    // 33
    int left = 0, right = nums.length - 1;
    if (nums[right] > nums[0]) {
        // 34
        return nums[0];
    }
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return -1;
}
public static int func_5b65bc39435146af8dc7b24038d3f490(Integer[] nums){
    if (nums.length == 1) {
        // 69
        return nums[0];
    }
    // 70
    int left = 0, right = nums.length - 1;
    if (nums[right] > nums[0]) {
        // 71
        return nums[0];
    }
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return -1;
}
public static int func_fd6511a727cb4c69bd4bf091b8ab6691(Integer[] nums){
    if (nums.length == 1) {
        // 80
        return nums[0];
    }
    // 81
    int left = 0, right = nums.length - 1;
    if (nums[right] > nums[0]) {
        // 82
        return nums[0];
    }
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return -1;
}
public static int func_2213193d835540b9ad3d34948548d055(Integer[] nums){
    if (nums.length == 1) {
        // 91
        return nums[0];
    }
    // 92
    int left = 0, right = nums.length - 1;
    if (nums[right] > nums[0]) {
        // 93
        return nums[0];
    }
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return -1;
}
public static int func_e091db95137f441eb1d36f215f0ad865(Integer[] nums){
    if (nums.length == 1) {
        // 102
        return nums[0];
    }
    // 103
    int left = 0, right = nums.length - 1;
    if (nums[right] > nums[0]) {
        // 104
        return nums[0];
    }
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return -1;
}
public static int func_341493840e4542ada98abd30ab2446d2(Integer[] nums){
    if (nums.length == 1) {
        // 122
        return nums[0];
    }
    // 123
    int left = 0, right = nums.length - 1;
    if (nums[right] > nums[0]) {
        // 124
        return nums[0];
    }
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return -1;
}
public static int func_aeaae0d689ee42cb8b5b6fbf29b310a3(Integer[] nums){
    if (nums.length == 1)
        return nums[0];
    // 133
    int left = 0;
    // 134
    int right = nums.length - 1;
    if (nums[right] > nums[0])
        return nums[0];
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return -1;
}
public static int func_d8cebf7fd4114f648528300f68e02d9a(Integer[] nums){
    if (nums.length == 1) {
        // 139
        return nums[0];
    }
    // 140
    int left = 0, right = nums.length - 1;
    if (nums[right] > nums[0]) {
        // 141
        return nums[0];
    }
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return -1;
}
public static int func_cb7175aedd9045f3a9a4ca5de0df0f68(Integer[] nums){
    if (nums.length == 1) {
        // 158
        return nums[0];
    }
    // 159
    int left = 0, right = nums.length - 1;
    if (nums[right] > nums[0]) {
        // 160
        return nums[0];
    }
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return -1;
}
public static int func_2970239972794300b84f8f6b0f680409(Integer[] nums){
    if (nums.length == 1) {
        // 186
        return nums[0];
    }
    // 187
    int left = 0, right = nums.length - 1;
    if (nums[right] > nums[0]) {
        // 188
        return nums[0];
    }
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return -1;
}


****** Cluster 28 ******
public static Integer func_d072766eb0814ddc891167532027daf0(Integer start, Integer[] nums, Integer end){
    while (start < end) {
        // 4
        // 5
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 6
            // 7
            start = mid + 1;
        } else {
            // 8
            // 9
            end = mid;
        }
    }
    return end;
}
public static Integer func_baee0952749d4d8f9d35007219b928cf(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 13
        // 14
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 15
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 16
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 17
            // 18
            left = mid + 1;
        } else {
            // 19
            // 20
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_5c896a2939d34168b377193a511d3e67(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 24
        // 25
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 26
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 27
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 28
            // 29
            left = mid + 1;
        } else {
            // 30
            // 31
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_25d859a8f0cc452eb9fb5f80510762c0(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 35
        // 36
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 37
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 38
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 39
            // 40
            left = mid + 1;
        } else {
            // 41
            // 42
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_10e45c3070274d2aa21e53f0e04fb1a2(Integer left, Integer[] nums, Integer right){
    while (left < right) {
        // 45
        // 46
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 47
            // 48
            left = mid + 1;
        } else {
            // 49
            // 50
            right = mid;
        }
    }
    return right;
}
public static Integer func_5803de22e141401d92a0e843a20b9e61(Integer start, Integer[] nums, Integer end){
    while (start < end) {
        // 63
        // 64
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 65
            // 66
            start = mid + 1;
        } else {
            // 67
            // 68
            end = mid;
        }
    }
    return end;
}
public static Integer func_f0b4c16864c64f298f91ebdc4305dc40(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 72
        // 73
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 74
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 75
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 76
            // 77
            left = mid + 1;
        } else {
            // 78
            // 79
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_2be9e359ed0c43948120b66cc7f6f176(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 83
        // 84
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 85
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 86
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 87
            // 88
            left = mid + 1;
        } else {
            // 89
            // 90
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_32e4eba1a58c4eb8b54cfe3928b8ebf1(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 94
        // 95
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 96
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 97
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 98
            // 99
            left = mid + 1;
        } else {
            // 100
            // 101
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_765b8c8a307c42688560db7a7cc93bfc(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 105
        // 106
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 107
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 108
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 109
            // 110
            left = mid + 1;
        } else {
            // 111
            // 112
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_948823088c784ae4974174be1d7d2328(Integer left, Integer[] nums, Integer right){
    while (left < right) {
        // 116
        // 117
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[right]) {
            // 118
            // 119
            left = mid + 1;
        } else {
            // 120
            // 121
            right = mid;
        }
    }
    return right;
}
public static Integer func_9d2c17e2759a41abad0614fc59b037ba(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 125
        // 126
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 127
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 128
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 129
            // 130
            left = mid + 1;
        } else {
            // 131
            // 132
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_5ad57f4eb23f46fe80c2969c360c79cf(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 135
        // 136
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1])
            return nums[mid + 1];
        if (nums[mid - 1] > nums[mid])
            return nums[mid];
        if (// 137
        nums[mid] > nums[0])
            // 137
            left = mid + 1;
        else
            // 138
            right = mid - 1;
    }
    return right;
}
public static Integer func_867cffcd5c0e428d836432f981767a69(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 142
        // 143
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 144
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 145
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 146
            // 147
            left = mid + 1;
        } else {
            // 148
            // 149
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_7613abc61cb64dad8a63dc7b6fc0f1f3(Integer start, Integer[] nums, Integer end){
    while (start < end) {
        // 152
        // 153
        int mid = start + (end - start) / 2;
        if (nums[mid] > nums[end]) {
            // 154
            // 155
            start = mid + 1;
        } else {
            // 156
            // 157
            end = mid;
        }
    }
    return end;
}
public static Integer func_f269fcc7b1424bc6a8499d90fb94de79(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 161
        // 162
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 163
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 164
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 165
            // 166
            left = mid + 1;
        } else {
            // 167
            // 168
            right = mid - 1;
        }
    }
    return right;
}
public static Integer func_b4d22a5ade364a11a1ec0d679c2f803e(Integer left, Integer[] nums, Integer right){
    while (left < right) {
        // 180
        // 181
        int midpoint = left + (right - left) / 2;
        if (nums[midpoint] > nums[right]) {
            // 182
            // 183
            left = midpoint + 1;
        } else {
            // 184
            // 185
            right = midpoint;
        }
    }
    return right;
}
public static Integer func_b308eb9163cf423a915f3f5c1e139f24(Integer left, Integer[] nums, Integer right){
    while (right >= left) {
        // 189
        // 190
        int mid = left + (right - left) / 2;
        if (nums[mid] > nums[mid + 1]) {
            // 191
            return nums[mid + 1];
        }
        if (nums[mid - 1] > nums[mid]) {
            // 192
            return nums[mid];
        }
        if (nums[mid] > nums[0]) {
            // 193
            // 194
            left = mid + 1;
        } else {
            // 195
            // 196
            right = mid - 1;
        }
    }
    return right;
}


****** Cluster 174 ******
public static Integer func_70becc2a8d6844e1a3dc3717c7b3ffff(Integer end, Integer start, Integer[] nums){
    while (start < end) {
        // 52
        // 53
        int mid = start + (end - start) / 2;
        if (mid > 0 && nums[mid] < nums[mid - 1]) {
            // 54
            return nums[mid];
        } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
            // 55
            // 56
            start = mid + 1;
        } else {
            // 57
            // 58
            end = mid - 1;
        }
    }
    return end;
}
public static Integer func_d9ee84c0f2f1485cbd3b0a563d296a07(Integer end, Integer start, Integer[] nums){
    while (start <= end) {
        // 172
        if (// 173
        nums[start] <= nums[end])
            return nums[start];
        // 174
        int mid = (start + end) / 2;
        if (nums[mid] >= nums[start]) {
            // 175
            // 176
            start = mid + 1;
        } else {
            // 177
            // 178
            end = mid;
        }
    }
    return end;
}


****** Cluster 157 ******
public static Integer func_14888e2372b14a3d87c3598fcee06f4f(Integer start, Integer[] nums, Integer end){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return mid;
}
public static Integer func_8455f76e2ae24bb192851a9b116bfcdb(Integer start, Integer[] nums, Integer end){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return end;
}
public static Integer func_b0e08dc11c89411893f09cabf38ce7b8(Integer start, Integer[] nums, Integer end){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return start;
}


****** Cluster 176 ******
public static Integer func_6da02840df354205bf8898fafc99e333(Integer start, Integer[] nums, Integer end){
    while (start < end) {
        // 52
        // 53
        int mid = start + (end - start) / 2;
        if (mid > 0 && nums[mid] < nums[mid - 1]) {
            // 54
            return nums[mid];
        } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
            // 55
            // 56
            start = mid + 1;
        } else {
            // 57
            // 58
            end = mid - 1;
        }
    }
    return end;
}
public static Integer func_db0e790a52fd497fb799cd3d9ffcd01d(Integer start, Integer[] nums, Integer end){
    while (start <= end) {
        // 172
        if (// 173
        nums[start] <= nums[end])
            return nums[start];
        // 174
        int mid = (start + end) / 2;
        if (nums[mid] >= nums[start]) {
            // 175
            // 176
            start = mid + 1;
        } else {
            // 177
            // 178
            end = mid;
        }
    }
    return end;
}


****** Cluster 177 ******
public static Integer func_0587299b416b44738db2f44494434c87(Integer end, Integer[] nums, Integer start){
    while (start < end) {
        // 52
        // 53
        int mid = start + (end - start) / 2;
        if (mid > 0 && nums[mid] < nums[mid - 1]) {
            // 54
            return nums[mid];
        } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
            // 55
            // 56
            start = mid + 1;
        } else {
            // 57
            // 58
            end = mid - 1;
        }
    }
    return end;
}
public static Integer func_80e9e7ac3c4a49a8bfabb331e2b06070(Integer end, Integer[] nums, Integer start){
    while (start <= end) {
        // 172
        if (// 173
        nums[start] <= nums[end])
            return nums[start];
        // 174
        int mid = (start + end) / 2;
        if (nums[mid] >= nums[start]) {
            // 175
            // 176
            start = mid + 1;
        } else {
            // 177
            // 178
            end = mid;
        }
    }
    return end;
}


****** Cluster 178 ******
public static Integer func_b9c2446ceaad41238c9a0a291763d970(Integer[] nums, Integer end, Integer start){
    while (start < end) {
        // 52
        // 53
        int mid = start + (end - start) / 2;
        if (mid > 0 && nums[mid] < nums[mid - 1]) {
            // 54
            return nums[mid];
        } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
            // 55
            // 56
            start = mid + 1;
        } else {
            // 57
            // 58
            end = mid - 1;
        }
    }
    return end;
}
public static Integer func_c7311e4dd6f14055a89f637f927aac87(Integer[] nums, Integer end, Integer start){
    while (start <= end) {
        // 172
        if (// 173
        nums[start] <= nums[end])
            return nums[start];
        // 174
        int mid = (start + end) / 2;
        if (nums[mid] >= nums[start]) {
            // 175
            // 176
            start = mid + 1;
        } else {
            // 177
            // 178
            end = mid;
        }
    }
    return end;
}


****** Cluster 179 ******
public static Integer func_1f95c4297f2f4a1497949d71dba5a604(Integer[] nums, Integer start, Integer end){
    while (start < end) {
        // 52
        // 53
        int mid = start + (end - start) / 2;
        if (mid > 0 && nums[mid] < nums[mid - 1]) {
            // 54
            return nums[mid];
        } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
            // 55
            // 56
            start = mid + 1;
        } else {
            // 57
            // 58
            end = mid - 1;
        }
    }
    return end;
}
public static Integer func_da762edf2fcf43179d53fea8cffdee9a(Integer[] nums, Integer start, Integer end){
    while (start <= end) {
        // 172
        if (// 173
        nums[start] <= nums[end])
            return nums[start];
        // 174
        int mid = (start + end) / 2;
        if (nums[mid] >= nums[start]) {
            // 175
            // 176
            start = mid + 1;
        } else {
            // 177
            // 178
            end = mid;
        }
    }
    return end;
}


****** Cluster 158 ******
public static Integer func_b5530711aeae4f9d96a97d4078d50f21(Integer end, Integer[] nums, Integer start){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return mid;
}
public static Integer func_a02cd53b9d074328be7d8447c4498b73(Integer end, Integer[] nums, Integer start){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return end;
}
public static Integer func_b46b5f26434245b3ba6b2ef62a2b94df(Integer end, Integer[] nums, Integer start){
    // 52
    // 53
    int mid = start + (end - start) / 2;
    if (mid > 0 && nums[mid] < nums[mid - 1]) {
        // 54
        return nums[mid];
    } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
        // 55
        // 56
        start = mid + 1;
    } else {
        // 57
        // 58
        end = mid - 1;
    }
    return start;
}


****** Cluster 182 ******
public static Integer func_144ace09c2814315989055c292766f95(Integer start, Integer[] nums, Integer end){
    while (start < end) {
        // 52
        // 53
        int mid = start + (end - start) / 2;
        if (mid > 0 && nums[mid] < nums[mid - 1]) {
            // 54
            return nums[mid];
        } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
            // 55
            // 56
            start = mid + 1;
        } else {
            // 57
            // 58
            end = mid - 1;
        }
    }
    return start;
}
public static Integer func_a7842821d00442c1818c6c46371b6210(Integer start, Integer[] nums, Integer end){
    while (start <= end) {
        // 172
        if (// 173
        nums[start] <= nums[end])
            return nums[start];
        // 174
        int mid = (start + end) / 2;
        if (nums[mid] >= nums[start]) {
            // 175
            // 176
            start = mid + 1;
        } else {
            // 177
            // 178
            end = mid;
        }
    }
    return start;
}


****** Cluster 183 ******
public static Integer func_1c20d512c1f047089bb6eae46b672bd7(Integer end, Integer[] nums, Integer start){
    while (start < end) {
        // 52
        // 53
        int mid = start + (end - start) / 2;
        if (mid > 0 && nums[mid] < nums[mid - 1]) {
            // 54
            return nums[mid];
        } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
            // 55
            // 56
            start = mid + 1;
        } else {
            // 57
            // 58
            end = mid - 1;
        }
    }
    return start;
}
public static Integer func_fe9abd9f3e224a80b8ab623645febb32(Integer end, Integer[] nums, Integer start){
    while (start <= end) {
        // 172
        if (// 173
        nums[start] <= nums[end])
            return nums[start];
        // 174
        int mid = (start + end) / 2;
        if (nums[mid] >= nums[start]) {
            // 175
            // 176
            start = mid + 1;
        } else {
            // 177
            // 178
            end = mid;
        }
    }
    return start;
}


****** Cluster 184 ******
public static Integer func_584252e005ba4aa28823ab0dee6145f6(Integer[] nums, Integer end, Integer start){
    while (start < end) {
        // 52
        // 53
        int mid = start + (end - start) / 2;
        if (mid > 0 && nums[mid] < nums[mid - 1]) {
            // 54
            return nums[mid];
        } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
            // 55
            // 56
            start = mid + 1;
        } else {
            // 57
            // 58
            end = mid - 1;
        }
    }
    return start;
}
public static Integer func_2b3faa18e68d48f38b8e0fca69c22fb0(Integer[] nums, Integer end, Integer start){
    while (start <= end) {
        // 172
        if (// 173
        nums[start] <= nums[end])
            return nums[start];
        // 174
        int mid = (start + end) / 2;
        if (nums[mid] >= nums[start]) {
            // 175
            // 176
            start = mid + 1;
        } else {
            // 177
            // 178
            end = mid;
        }
    }
    return start;
}


****** Cluster 185 ******
public static Integer func_7fc2965e298e4f0dae78915f84228a85(Integer[] nums, Integer start, Integer end){
    while (start < end) {
        // 52
        // 53
        int mid = start + (end - start) / 2;
        if (mid > 0 && nums[mid] < nums[mid - 1]) {
            // 54
            return nums[mid];
        } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
            // 55
            // 56
            start = mid + 1;
        } else {
            // 57
            // 58
            end = mid - 1;
        }
    }
    return start;
}
public static Integer func_347a6a4e7eb64e2c992e592fa7ae4223(Integer[] nums, Integer start, Integer end){
    while (start <= end) {
        // 172
        if (// 173
        nums[start] <= nums[end])
            return nums[start];
        // 174
        int mid = (start + end) / 2;
        if (nums[mid] >= nums[start]) {
            // 175
            // 176
            start = mid + 1;
        } else {
            // 177
            // 178
            end = mid;
        }
    }
    return start;
}


****** Cluster 181 ******
public static Integer func_cfb8613794844666afb7be6aa3b27642(Integer end, Integer start, Integer[] nums){
    while (start < end) {
        // 52
        // 53
        int mid = start + (end - start) / 2;
        if (mid > 0 && nums[mid] < nums[mid - 1]) {
            // 54
            return nums[mid];
        } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
            // 55
            // 56
            start = mid + 1;
        } else {
            // 57
            // 58
            end = mid - 1;
        }
    }
    return start;
}
public static Integer func_2dad97ea8d7a45ed984ecdf77b8bf1ed(Integer end, Integer start, Integer[] nums){
    while (start <= end) {
        // 172
        if (// 173
        nums[start] <= nums[end])
            return nums[start];
        // 174
        int mid = (start + end) / 2;
        if (nums[mid] >= nums[start]) {
            // 175
            // 176
            start = mid + 1;
        } else {
            // 177
            // 178
            end = mid;
        }
    }
    return start;
}