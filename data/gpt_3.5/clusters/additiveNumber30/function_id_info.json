{"isAdditiveNumber1": ["    return isAdditiveNumberHelper1(num, 0, 0, 0, 0);\n", 1, 2, "      return count > 2;\n", 3, 4, 5, 6, "        return false;\n", 7, 8, "          return true;\n", 9, 10, "    return false;\n"], "isAdditiveNumber2": ["        return isAdditiveHelper2(num, 0, 0, 0, 0);\n", 11, 12, "            return count > 2;\n", 13, 14, 15, 16, 17, "                    return true;\n", 18, 19, "                    return true;\n", 20, 21, "        return false;\n"], "isAdditiveNumber3": [22, "      return false;\n", "    return isAdditiveNumberHelper3(num, 0, 0, 0, 0);\n"], "isAdditiveNumberHelper3": [23, 24, "        return true;\n", "      return false;\n", 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, "        return true;\n", "    return false;\n"], "isAdditiveNumber4": ["        return isAdditiveHelper4(num, 0, 0, 0, 0);\n"], "isAdditiveHelper4": [35, "            return count >= 3;\n", 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, "                return true;\n", "        return false;\n"], "isAdditiveNumber5": [47, 48, 49, 50, "                    return true;\n", "        return false;\n", 51, 52, "            return false;\n", 53, "            return false;\n", 54, 55, 56, 57, 58, 59, 60, 61, "                return false;\n", "        return true;\n"], "isAdditiveNumber6": ["      return helper6(num, 0, 0, 0, 0);\n", 62, 63, "         return count > 2;\n", 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, "            return true;\n", "      return false;\n"], "isAdditiveNumber7": ["        return isAdditiveNumberHelper7(num, 0, 0, 0, 0);\n"], "isAdditiveNumberHelper7": [75, 76, "                return true;\n", 77, "                return false;\n", 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, "                return true;\n", "        return false;\n"], "isAdditiveNumber8": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, "                    return true;\n", "        return false;\n", 98, 99, "            return true;\n", 100, 101, 102, "            return false;\n", "        return isValid8(num, start + sumStr.length(), secondNum, sum);\n"], "isAdditiveNumber9": [103, 104, 105, 106, 107, "                    return true;\n", "        return false;\n", 108, 109, "            return false;\n", "        return true;\n", 110, 111, "            return false;\n", 112, 113, 114, "                return true;\n", 115, "                return isAdditive9(num2, sum, num.substring(sum.length()));\n", "        return false;\n", 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, "        return sb.reverse().toString();\n"], "isAdditiveNumber10": ["        return backtrack10(num, 0, 0, 0, 0);\n"], "backtrack10": [129, "            return count > 2;\n", 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, "                return true;\n", "        return false;\n"], "isAdditiveNumber11": ["        return isAdditiveNumberHelper11(num, 0, 0, 0, 0);\n", 141, 142, "            return count > 2;\n", 143, 144, 145, 146, 147, 148, 149, 150, "                return true;\n", "        return false;\n"], "isAdditive12": [151, 152, 153, 154, "                    return true;\n", "        return false;\n", 155, 156, "            return false;\n", 157, "            return false;\n", 158, 159, 160, 161, 162, 163, 164, "                return false;\n", 165, 166, 167, "        return true;\n"], "isAdditiveNumber13": [168, 169, 170, 171, 172, 173, "          return true;\n", 174, 175, 176, 177, "    return false;\n", 178, 179, "      return true;\n", 180, 181, 182, "      return false;\n", "    return isValidAdditive13(num, start + sumString.length(), second, sum);\n"], "isAdditiveNumber14": [183, 184, 185, 186, "                    return true;\n", "        return false;\n", 187, 188, 189, "            return false;\n", 190, 191, 192, 193, 194, "            return false;\n", 195, "            return true;\n", "        return validate14(num, second, third, third + sumLen);\n"], "isAdditiveNumber15": ["        return isAdditiveNumber15(num, 0, 0, 0, 0);\n", 196, 197, "            return count >= 3;\n", 198, 199, 200, 201, 202, 203, 204, "                return true;\n", "        return false;\n"], "isAdditiveNumber16": [205, 206, 207, 208, 209, 210, "                    return true;\n", "        return false;\n"], "isValid16": [211, "            return false;\n", 212, 213, 214, 215, 216, 217, 218, 219, 220, "                return false;\n", "        return true;\n"], "isAdditiveNumber17": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, "                    return true;\n", "        return false;\n", 231, 232, "            return true;\n", 233, 234, 235, "            return false;\n", "        return isAdditive17(num.substring(sumStr.length()), num2, sum);\n"], "isAdditiveNumber18": ["       return isAdditiveNumber18(num, 0, new ArrayList<>());\n", 236, 237, "           return sequence.size() >= 3;\n", 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, "               return true;\n", 252, "       return false;\n"], "isAdditiveNumber19": [253, "            return false;\n", 254, 255, 256, 257, "                    return true;\n", "        return false;\n", 258, 259, "            return false;\n", 260, "            return false;\n", 261, 262, 263, 264, 265, 266, 267, 268, "                return false;\n", "        return true;\n"], "isAdditiveNumber20": ["        return dfs(num, 0, 0, 0, 0);\n", 269, 270, "            return count > 2;\n", 271, 272, 273, 274, 275, 276, 277, "                return true;\n", "        return false;\n"]}